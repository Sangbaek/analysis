#!/bin/csh -f

#./inquire_simulation disk4 LUND ROOT
#./inquire_simulation disk3 background
#./inquire_simulation disk3 gemc_background ROOT 
#./inquire_simulation disk3 gemc_background ROOT REMOVE
#./inquire_simulation disk2 hps_test_nopa reset 
#./inquire_simulation clas12 srrsolenoid reset 

set DISK     = $1
set WHAT     = $2
set OPT      = $3
set OPT2     = $4

set dir  = /work/clas/$DISK/ungaro/clas12/$WHAT
set mdir = /arena1/gemc_data/root
set mdir = /volatile/clas/$DISK/ungaro/gemc_farm/root

set SIMU = 1
if($OPT == "reset") then
	\echo Resetting $WHAT
	rm -rf nevents_$WHAT.dat
	\echo 1 > nevents_$WHAT.dat
	exit
endif
set EVN  = `cat nevents_$WHAT.dat` 
 
set EXACT = 10  # number of expected events
set MINP  = 10  # minimum number of events required to be copied
set SUBP  = 0       # number of events to substract from EXACT - this in case we don't have the EXACT


#ssh ungaro@mauri mkdir -p $mdir/$WHAT
mkdir -p $mdir/$WHAT
#set NFILE = `ssh mauri "ls $mdir/$WHAT" | grep root | wc | awk '{print $1}'`
set NFILE = `ls $mdir/$WHAT | grep root | wc | awk '{print $1}'`

\echo
\echo Number of files existing in $mdir/$WHAT is $NFILE
\echo Last event for $WHAT is $EVN
\echo

while ($SIMU < 1000)
	if(`filetest -e  $dir/simu_$SIMU` == "1") then
		set CORE    = (`ls $dir/simu_$SIMU | grep core | wc | awk '{print $1}'`)
		set EXITED  = (`grep Exiting $dir/simu_$SIMU/gemc.log | wc | awk '{print $1}'`)
  
		if($OPT == "VERBOSE") then 
			\echo  $dir/simu_$SIMU `grep event $dir/simu_$SIMU/gemc.log | tail -1`
		endif

		if($CORE == "1") then
			\echo Core found! Removing dir $dir/simu_$SIMU 
			rm -rf $dir/simu_$SIMU   
		endif


		if($EXITED == "1") then
			\echo gemc exited - check the log. Use option \"CLEAR\" to clear those.
			if($OPT == "CLEAR") then
				\echo Removing dir
				rm -rf $dir/simu_$SIMU   
			endif
		endif
    
		if($OPT == "ROOT") then 
			# The last part to avoid err msg on screen during event action logs
			set LASTE = `grep event $dir/simu_$SIMU/gemc.log | grep "Begin of event"   | tail -1 | awk -F"Begin of event" '{print $NF}' | awk -F">>" '{print $1}'`
			if($LASTE == $EXACT) then
				@ PROC = $LASTE
			else
				@ PROC = $LASTE - $SUBP
			endif

			if( $PROC >= $MINP) then 
				\echo Last event for simulation $SIMU is $LASTE - $PROC to be processed - Start Event is $EVN
				set exc = `./gemc_evio2root $dir/simu_$SIMU/out.ev $SIMU.root $PROC $EVN |& grep -i segmentation | awk '{print $1}' `
				@ EVN += $PROC
				if( `\echo $exc` != "" || `ls | grep core | wc | awk '{print $1}'` == "1") then
					\echo simu_$SIMU gave error $exc , deleting root file 
					rm $SIMU.root
					@ EVN -= $PROC
					rm core.*
					\echo removing directory too
					rm -rf $dir/simu_$SIMU/
					
				else
					@ NFILE += 1
					\echo directory $SIMU is done, copying to mauri to $NFILE".root" and removing it
					#scp $SIMU.root ungaro@mauri:$mdir/$WHAT/$NFILE".root"
					cp $SIMU.root $mdir/$WHAT/$NFILE".root"
					rm $SIMU.root
					rm -rf $dir/simu_$SIMU 
					rm -rf nevents_$WHAT.dat ; \echo $EVN >  nevents_$WHAT.dat
				endif
			else
				\echo only $PROC in $dir/simu_$SIMU
				if($OPT2 == "REMOVE") then
					\echo Not enough events in $dir/simu_$SIMU - REMOVING DIRECTORY
					rm -rf  $dir/simu_$SIMU 
				endif
			endif	 
		 endif
    
 
	endif
	@ SIMU += 1
end
 
 
 
