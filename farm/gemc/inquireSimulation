#!/bin/csh -f

#./inquire_simulation clas12 srrsolenoid reset 

# Availiable options:
#
# reset:   will reset the event count number to 1 (write to .dat file)
# verbose: will display the event information (no ROOTIFICATION)
# clear:   will remove unfinished directories
# root:    will rootify, w/o removing dir
# rootr:   will rootify and remove rootified dir

set OPT = $1

# Parameters set by user
# ----------------------

set GCARDSD = ~/ddvcs                         # collection of gcards. One job / gcard will be launched
set INPUTD  = /work/clas/clas12/ungaro/clas12 # location of evio files (inside each gcard title)
set OUTPUTD = $INPUTD/root                    # output directory
set EXACT   = 5  # number of expected events
set MINP    = 5  # minimum number of events required to be copied

# End of user parameter
# ---------------------


# title of the jobs to be launched
set titles    = `./functions/getGcardsList $GCARDSD`
echo
echo " > Gcards to be launched from " $GCARDSD " :"
echo
echo " >" $titles
echo


if($OPT == "reset") then
	set w = 1
	while ($w <= $#titles)
		set thisJob = $titles[$w]
		\echo Resetting $thisJob
		rm -rf nevents_$thisJob.dat
		\echo 1 > nevents_$thisJob.dat
		@ w += 1
	end
	exit
endif


set SIMU = 1
set EVN  = `cat nevents_$WHAT.dat` 
 
set SUBP  = 0       # number of events to substract from EXACT - this in case we don't have the EXACT


#ssh ungaro@mauri mkdir -p $mdir/$WHAT
mkdir -p $mdir/$WHAT
#set NFILE = `ssh mauri "ls $mdir/$WHAT" | grep root | wc | awk '{print $1}'`
set NFILE = `ls $mdir/$WHAT | grep root | wc | awk '{print $1}'`

\echo
\echo Number of files existing in $mdir/$WHAT is $NFILE
\echo Last event for $WHAT is $EVN
\echo

while ($SIMU < 2000)
	if(`filetest -e  $dir/simu_$SIMU` == "1") then
		set CORE    = (`ls $dir/simu_$SIMU | grep core | wc | awk '{print $1}'`)
		set EXITED  = (`grep Exiting $dir/simu_$SIMU/gemc.log | wc | awk '{print $1}'`)
  
		if($OPT == "VERBOSE") then 
			\echo  $dir/simu_$SIMU `grep event $dir/simu_$SIMU/gemc.log | tail -1`
		endif

		if($CORE == "1") then
			\echo Core found! Removing dir $dir/simu_$SIMU 
			rm -rf $dir/simu_$SIMU   
		endif


		if($EXITED == "1") then
			\echo gemc exited - check the log. Use option \"CLEAR\" to clear those.
			if($OPT == "CLEAR") then
				\echo Removing dir
				rm -rf $dir/simu_$SIMU   
			endif
		endif
    
		if($OPT == "ROOT") then 
			# The last part to avoid err msg on screen during event action logs
			set LASTE = `grep event $dir/simu_$SIMU/gemc.log | grep "Begin of event"   | tail -1 | awk -F"Begin of event" '{print $NF}' | awk -F">>" '{print $1}'`
			if($LASTE == $EXACT) then
				@ PROC = $LASTE
			else
				@ PROC = $LASTE - $SUBP
			endif

			if( $PROC >= $MINP) then 
				\echo Last event for simulation $SIMU is $LASTE - $PROC to be processed - Start Event is $EVN
				set exc = `./evio2root -B=DC -INPUTF=$dir/simu_$SIMU/out.ev |& grep -i segmentation | awk '{print $1}' `
				@ EVN += $PROC
				if( `\echo $exc` != "" || `ls | grep core | wc | awk '{print $1}'` == "1") then
					\echo simu_$SIMU gave error $exc , deleting root file 
					rm $SIMU.root
					@ EVN -= $PROC
					rm core.*
					\echo removing directory too
					rm -rf $dir/simu_$SIMU/
					
				else
					@ NFILE += 1
					\echo directory $SIMU is done, copying to mauri to $NFILE".root" and removing it
					mv $dir/simu_$SIMU/out.root $mdir/$WHAT/$NFILE".root"
					#rm -rf $dir/simu_$SIMU 
					#rm -rf nevents_$WHAT.dat ; \echo $EVN >  nevents_$WHAT.dat
				endif
			else
				\echo only $PROC in $dir/simu_$SIMU
				if($OPT2 == "REMOVE") then
					\echo Not enough events in $dir/simu_$SIMU - REMOVING DIRECTORY
					rm -rf  $dir/simu_$SIMU 
				endif
			endif	 
		 endif
    
 
	endif
	@ SIMU += 1
end
 
 
 
